{"version":3,"file":"static/js/5815.f42fdfc2.chunk.js","mappings":"wKACO,IAAMA,EAAa,EACbC,EAAW,E,+QC+IxB,UArHmB,WACZ,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAwBL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA5BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACnBG,GAAwBT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACrBG,GAAoCC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxCC,EAAWH,EAAXG,YAAaC,EAAWJ,EAAXI,YACdC,GAAWC,EAAAA,EAAAA,OAGxBC,EAAAA,EAAAA,YAAU,WACV,IAAMC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAC,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEVC,EAAAA,EAAIC,IAAI,UAADC,OAAWrC,EAAAA,EAAU,KAAAqC,OAAIpC,EAAAA,EAAQ,OAAMqC,MAAK,SAAAC,GACtDhC,EAAUgC,EAAIzB,KAAKyB,KACnBxB,EAAQwB,EAAIzB,KACf,IAAG0B,OAAM,SAAAC,IACPC,EAAAA,EAAAA,GAAiBD,EAAK,QACxB,IAAE,OAAAT,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,UAIDU,EAAAA,EAAAA,GAAiB,uCAAwC,SAAQ,wBAAAV,EAAAY,OAAA,GAAAf,EAAA,kBAGrE,gBAdSgB,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,KAgBLvB,IAEJJ,EAAY4B,QAAQ,gBAAkB,GACzC3B,EAAS,IAET,GAAG,CAACD,EAAaC,EAAUF,IAE3B,IAAM8B,EAAY,eAAAC,GAAAxB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAuB,EAAOrB,EAAGsB,GAAK,OAAAzB,EAAAA,EAAAA,KAAAI,MAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,OAEnB,OADfJ,EAAEwB,iBACF3C,EAAQyC,GAAOC,EAAApB,KAAA,EAAAoB,EAAAnB,KAAA,EAENC,EAAAA,EAAIC,IAAI,UAADC,OAAW3B,EAAI,KAAA2B,OAAIpC,EAAAA,EAAQ,OAAMqC,MAAK,SAAAC,GAC/ChC,EAAUgC,EAAIzB,KAAKyB,KACnBxB,EAAQwB,EAAIzB,KACf,IAAG0B,OAAM,SAAAC,IACPC,EAAAA,EAAAA,GAAiBD,EAAK,QACxB,IAAE,OAAAY,EAAAnB,KAAA,gBAAAmB,EAAApB,KAAA,EAAAoB,EAAAV,GAAAU,EAAA,UAGHX,EAAAA,EAAAA,GAAiB,mBAAoB,SAAQ,yBAAAW,EAAAT,OAAA,GAAAO,EAAA,kBAEjD,gBAdiBI,EAAAC,GAAA,OAAAN,EAAAJ,MAAA,KAAAC,UAAA,KAgBhB,OACGU,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAAC,UACZF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAI,GAAGF,UACLG,EAAAA,EAAAA,MAACC,EAAAA,GAAK,CAACC,UAAU,QAAOL,SAAA,EACvBF,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CAACC,MAAO,CAACC,gBAAgB,WAAWR,UAC7CF,EAAAA,EAAAA,KAAA,UAAQS,MAAO,CAACE,MAAM,SAAST,SAAC,sBAElCG,EAAAA,EAAAA,MAACO,EAAAA,GAAS,CAAAV,SAAA,EACRF,EAAAA,EAAAA,KAAA,KAAGO,UAAU,6BAA4BL,SAAC,oDAI1CG,EAAAA,EAAAA,MAACQ,EAAAA,GAAW,CAACC,KAAK,YAAYC,IAAI,cAAcC,QAASrD,EAAY4B,QAAQ,eAAiB,EAAcW,SAAA,EACjHG,EAAAA,EAAAA,MAACY,EAAAA,GAAM,CAACC,SAAO,EAACT,MAAO,CAACU,SAAS,QAASC,MAAM,SAASC,YAAU,EAAAnB,SAAA,EACnEF,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAAApB,UACXG,EAAAA,EAAAA,MAACkB,EAAAA,GAAS,CAAArB,SAAA,EACVF,EAAAA,EAAAA,KAACwB,EAAAA,GAAgB,CAAAtB,SAAC,WACjBF,EAAAA,EAAAA,KAACwB,EAAAA,GAAgB,CAAAtB,SAAC,UACjBF,EAAAA,EAAAA,KAACwB,EAAAA,GAAgB,CAAAtB,SAAC,YACpBF,EAAAA,EAAAA,KAACwB,EAAAA,GAAgB,CAAAtB,SAAC,aAClBF,EAAAA,EAAAA,KAACwB,EAAAA,GAAgB,CAAAtB,SAAC,YAClBF,EAAAA,EAAAA,KAACwB,EAAAA,GAAgB,CAAAtB,SAAC,kBAClBF,EAAAA,EAAAA,KAACwB,EAAAA,GAAgB,CAAAtB,SAAC,kBAClBF,EAAAA,EAAAA,KAACwB,EAAAA,GAAgB,UAGjBxB,EAAAA,EAAAA,KAACyB,EAAAA,GAAU,CAAAvB,SAGU,IAAhBrD,EAAO6E,OAAY,GAAI7E,EAAO8E,KAAI,SAACC,GAAI,OACvCvB,EAAAA,EAAAA,MAACkB,EAAAA,GAAS,CAAArB,SAAA,EACfF,EAAAA,EAAAA,KAAC6B,EAAAA,GAAc,CAAA3B,SAAE0B,EAAKE,QACtB9B,EAAAA,EAAAA,KAAC6B,EAAAA,GAAc,CAAA3B,SAAE0B,EAAKG,QACtB/B,EAAAA,EAAAA,KAAC6B,EAAAA,GAAc,CAAA3B,SAAE0B,EAAKI,OAAOF,QAC7B9B,EAAAA,EAAAA,KAAC6B,EAAAA,GAAc,CAAA3B,SAAE0B,EAAKK,QAAQH,QAC7B9B,EAAAA,EAAAA,KAAC6B,EAAAA,GAAc,CAAA3B,SAAE0B,EAAKM,KAAKC,QAAU,IAAMP,EAAKM,KAAKE,aACrDpC,EAAAA,EAAAA,KAAC6B,EAAAA,GAAc,CAAA3B,SAAE0B,EAAKS,aACtBrC,EAAAA,EAAAA,KAAC6B,EAAAA,GAAc,CAAA3B,SAAE0B,EAAKU,aACvBtC,EAAAA,EAAAA,KAAC6B,EAAAA,GAAc,KACfxB,EAAAA,EAAAA,MAACwB,EAAAA,GAAc,CAAA3B,SAAA,EACfG,EAAAA,EAAAA,MAACkC,EAAAA,GAAY,CAAArC,SAAA,CACbvC,EAAY4B,QAAQ,gBAAkB,GAAGS,EAAAA,EAAAA,KAACwC,EAAAA,GAAO,CAAC7B,MAAM,YAAY8B,KAAK,KAAIvC,UAAEF,EAAAA,EAAAA,KAAC0C,EAAAA,GAAI,CAACC,GAAE,IAAA/D,OAAM,EAAC,WAAWgE,MAAOhB,EAAKiB,GAAItC,UAAU,OAAOE,MAAO,CAACE,MAAM,QAASmC,eAAe,QAAQ5C,SAAC,YAAyB,GAC/MvC,EAAY4B,QAAQ,kBAAoB,GAAGS,EAAAA,EAAAA,KAACwC,EAAAA,GAAO,CAAC7B,MAAM,SAAS8B,KAAK,KAAIvC,UAAEF,EAAAA,EAAAA,KAAC0C,EAAAA,GAAI,CAACC,GAAI,UAAYC,MAAOhB,EAAKiB,GAAI,kBAAmBtC,UAAU,SAASE,MAAO,CAACE,MAAM,QAASmC,eAAe,QAAQ5C,SAAC,aAA0B,MACtN,SAbK0B,EAAKiB,GAcd,UAMZxC,EAAAA,EAAAA,MAAA,KAAAH,SAAA,EACAF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC+C,EAAAA,EAAK,CAACC,QAAS,EAAE9C,UACnBF,EAAAA,EAAAA,KAACiD,EAAAA,EAAU,CAACC,MAAO7F,EAAK8F,WAAYlG,KAAMA,EAAMmG,SAAU5D,EAAc6D,QAAQ,WAAWC,MAAM,UAAW3C,MAAM,+BAcxH,E","sources":["helpers/paging_indexes.js","pages/states/list.jsx"],"sourcesContent":["\r\nexport const startIndex = 1;\r\nexport const per_page = 30;\r\n//1692950350","import app from '../../helpers/axiosConfig'\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { per_page, startIndex } from '../../helpers/paging_indexes';\r\nimport showToastMessage from '../../components/toast';\r\nimport { Pagination, Stack } from '@mui/material';\r\nimport {\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCardImage,\r\n  CCardText,\r\n  CCardTitle,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableCaption,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { DocsExample } from '../../components'\r\n\r\nconst ListStates = () =>{\r\n       const [stated, setStates] = useState([]);\r\n       const [page, setPage] = useState(1)\r\n        const [data, setData] = useState([]);\r\n       const {currentUser, permissions } = useContext(AuthContext);\r\n       const navigate = useNavigate()\r\n       \r\n\r\nuseEffect(()=>{\r\nconst loadItem = async e =>{\r\n try{         \r\n        await app.get(`/state/${startIndex}/${per_page}/0`).then(res=>{\r\n           setStates(res.data.res)\r\n           setData(res.data)\r\n        }).catch(err=>{\r\n          showToastMessage(err, 'error')\r\n        })\r\n        \r\n         \r\n    }catch(err){\r\n         showToastMessage('Error occured while loading data ...', 'error')\r\n        }\r\n        \r\n    }\r\n   \r\n         loadItem() \r\n         //===============================\r\nif(!(permissions.indexOf(\"VIEW_STATES\") > -1)){\r\n  navigate(\"/\")\r\n}\r\n  }, [permissions, navigate, currentUser])\r\n \r\n  const handleChange = async (e, value) => {\r\n    e.preventDefault()\r\n    setPage(value);\r\n      try{\r\n       await app.get(`/state/${page}/${per_page}/0`).then(res=>{\r\n           setStates(res.data.res)\r\n           setData(res.data)\r\n        }).catch(err=>{\r\n          showToastMessage(err, 'error')\r\n        })\r\n      }\r\n      catch(err){\r\n       showToastMessage('Internal error !', 'error')\r\n      }\r\n  }\r\n    \r\n    return (\r\n       <CRow >\r\n<CCol xs={12} >\r\n        <CCard className=\"mb-12\" >\r\n         <CCardHeader style={{backgroundColor:'skyblue'}}>\r\n            <strong style={{color:'white'}}>LIST OF STATES</strong>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Using the Add New button to create new States.\r\n            </p>\r\n           \r\n            <DocsExample href=\"state/add\" add=\"States List\" showAdd={permissions.indexOf(\"ADD_STATES\") > -1? true:false}>\r\n       <CTable striped style={{fontSize:'12px'}} align=\"middle\" responsive>\r\n       <CTableHead>\r\n       <CTableRow>\r\n       <CTableHeaderCell>STATE</CTableHeaderCell>\r\n        <CTableHeaderCell>CODE</CTableHeaderCell>\r\n         <CTableHeaderCell>REGION</CTableHeaderCell>\r\n       <CTableHeaderCell>COUNTRY</CTableHeaderCell>\r\n       <CTableHeaderCell>EDITED</CTableHeaderCell>\r\n       <CTableHeaderCell>CREATED_DATE</CTableHeaderCell>\r\n       <CTableHeaderCell>LAST_UPDATED</CTableHeaderCell>\r\n       <CTableHeaderCell></CTableHeaderCell>\r\n       </CTableRow>\r\n       </CTableHead>\r\n       <CTableBody>\r\n       {\r\n        \r\n            stated.length===0? '': stated.map((item)=>(\r\n            <CTableRow key={item.id}>\r\n       <CTableDataCell>{item.name}</CTableDataCell>\r\n       <CTableDataCell>{item.code}</CTableDataCell>\r\n       <CTableDataCell>{item.region.name}</CTableDataCell>\r\n       <CTableDataCell>{item.country.name}</CTableDataCell>\r\n        <CTableDataCell>{item.user.surname + ' ' + item.user.othername}</CTableDataCell>\r\n        <CTableDataCell>{item.createdAt}</CTableDataCell>\r\n        <CTableDataCell>{item.updatedAt}</CTableDataCell>\r\n       <CTableDataCell></CTableDataCell>\r\n       <CTableDataCell>\r\n       <CButtonGroup>\r\n      {permissions.indexOf(\"EDIT_STATES\") > -1? <CButton color=\"secondary\" size=\"sm\" ><Link to={`/${0}/state/`} state={item.id} className=\"edit\" style={{color:'white', textDecoration:'none'}}> Edit</Link></CButton> : ''}\r\n        { permissions.indexOf(\"DELETE_STATES\") > -1? <CButton color=\"danger\" size=\"sm\" ><Link to={'/delete'}  state={item.id +'&/state&/state/'} className=\"delete\" style={{color:'white', textDecoration:'none'}}>Delete</Link></CButton> : ''}\r\n        </CButtonGroup> </CTableDataCell>\r\n       </CTableRow>\r\n            ))\r\n           \r\n        }\r\n      </CTableBody>\r\n     </CTable>\r\n       <p>\r\n       <br />\r\n       <Stack spacing={2}>\r\n      <Pagination count={data.totalPages} page={page} onChange={handleChange} variant=\"outlined\" shape=\"rounded\"  color=\"secondary\" />\r\n    </Stack>\r\n       </p>\r\n       </DocsExample>\r\n       </CCardBody>\r\n       </CCard>\r\n       </CCol>\r\n       </CRow>\r\n     \r\n        \r\n        \r\n       \r\n       \r\n    )\r\n}\r\n\r\nexport default ListStates"],"names":["startIndex","per_page","_useState","useState","_useState2","_slicedToArray","stated","setStates","_useState3","_useState4","page","setPage","_useState5","_useState6","data","setData","_useContext","useContext","AuthContext","currentUser","permissions","navigate","useNavigate","useEffect","loadItem","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","app","get","concat","then","res","catch","err","showToastMessage","t0","stop","_x","apply","arguments","indexOf","handleChange","_ref2","_callee2","value","_context2","preventDefault","_x2","_x3","_jsx","CRow","children","CCol","xs","_jsxs","CCard","className","CCardHeader","style","backgroundColor","color","CCardBody","DocsExample","href","add","showAdd","CTable","striped","fontSize","align","responsive","CTableHead","CTableRow","CTableHeaderCell","CTableBody","length","map","item","CTableDataCell","name","code","region","country","user","surname","othername","createdAt","updatedAt","CButtonGroup","CButton","size","Link","to","state","id","textDecoration","Stack","spacing","Pagination","count","totalPages","onChange","variant","shape"],"sourceRoot":""}