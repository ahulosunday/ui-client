{"version":3,"file":"static/js/8974.44ab018b.chunk.js","mappings":"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","sources":["helpers/paging_indexes.js","pages/ward/list.jsx"],"sourcesContent":["\r\nexport const startIndex = 1;\r\nexport const per_page = 30;\r\n//1692950350","import app from '../../helpers/axiosConfig'\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Pagination, Stack } from '@mui/material';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport { per_page, startIndex } from '../../helpers/paging_indexes';\r\nimport showToastMessage from '../../components/toast';\r\nimport {\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCardImage,\r\n  CCardText,\r\n  CCardTitle,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableCaption,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { DocsExample } from '../../components'\r\n\r\nconst ListWard = () =>{\r\n       const [ward, setWards] = useState([]);\r\n       const [data, setData] = useState([])\r\n       const [page, setPage] =useState(1)\r\n   const {currentUser, permissions } = useContext(AuthContext);\r\n    const navigate = useNavigate()\r\n       \r\n\r\nuseEffect(()=>{\r\nconst loadItem = async e =>{\r\n try{\r\n       await app.get(`/ward/${startIndex}/${per_page}/0`).then(res=>{\r\n          setWards(res.data.res)\r\n          setData(res.data)\r\n        }).catch(err=>{\r\n          showToastMessage('Error occured while loading data ...:'+ err, 'error')\r\n        })\r\n         }catch(err){\r\n         showToastMessage('Error occured while loading data ...', 'error')\r\n        }\r\n        \r\n    }\r\n   \r\n         loadItem() \r\n         //===============================\r\n         if(!(permissions.indexOf(\"VIEW_WARDS\") > -1) ){\r\n          navigate('/')\r\n         }\r\n\r\n  }, [permissions, navigate, currentUser])\r\n   const handleChange = async (e, value) => {\r\n    e.preventDefault()\r\n    setPage(value);\r\n      try{\r\n        await app.get(`/ward/${page}/${per_page}/0`).then(res=>{\r\n          setWards(res.data.res)\r\n          setData(res.data)\r\n        }).catch(err=>{\r\n          showToastMessage('Error occured while loading data ...:'+ err, 'error')\r\n        })\r\n\r\n      }\r\n      catch(err){\r\n       showToastMessage('Internal error !', 'error')\r\n      }\r\n  }\r\n   \r\n    return (\r\n        <CRow >\r\n        <CCol xs={12} >\r\n        <CCard className=\"mb-12\" >\r\n         <CCardHeader style={{backgroundColor:'skyblue'}}>\r\n            <strong style={{color:'white'}}>LISTS OF WARDS</strong>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Using the Add New button to create new Wards.\r\n            </p>\r\n           \r\n            <DocsExample href=\"ward/add\" add=\"Wards List\" showAdd={permissions.indexOf(\"ADD_WARDS\") > -1? true:false}>\r\n       <CTable striped style={{fontSize:'12px'}} align=\"middle\" responsive>\r\n       <CTableHead>\r\n       <CTableRow>\r\n       <CTableHeaderCell>WARD</CTableHeaderCell>\r\n        <CTableHeaderCell>CODE</CTableHeaderCell>\r\n        <CTableHeaderCell>LGA</CTableHeaderCell>\r\n        <CTableHeaderCell>STATE</CTableHeaderCell>\r\n         <CTableHeaderCell>REGION</CTableHeaderCell>\r\n          <CTableHeaderCell>COUNTRY</CTableHeaderCell>\r\n       <CTableHeaderCell>Editedby</CTableHeaderCell>\r\n       <CTableHeaderCell>CREATED_DATE</CTableHeaderCell>\r\n       <CTableHeaderCell>LAST_UPDATED</CTableHeaderCell>\r\n       <CTableHeaderCell></CTableHeaderCell>\r\n       </CTableRow>\r\n       </CTableHead>\r\n       <CTableBody>\r\n       {\r\n        \r\n            ward.length===0? '' : ward.map((item)=>(\r\n            <CTableRow>\r\n       <CTableDataCell>{item.name}</CTableDataCell>\r\n       <CTableDataCell>{item.code}</CTableDataCell>\r\n       <CTableDataCell>{item.lga.name}</CTableDataCell>\r\n       <CTableDataCell>{item.state.name}</CTableDataCell>\r\n       <CTableDataCell>{item.region.name}</CTableDataCell>\r\n       <CTableDataCell>{item.country.name}</CTableDataCell>\r\n        <CTableDataCell>{item.user.surname + ' ' + item.user.othername}</CTableDataCell>\r\n        <CTableDataCell>{item.createdAt}</CTableDataCell>\r\n        <CTableDataCell>{item.updatedAt}</CTableDataCell>\r\n       <CTableDataCell></CTableDataCell>\r\n       <CTableDataCell>\r\n       <CButtonGroup>\r\n       { permissions.indexOf(\"EDIT_WARDS\") > -1? <CButton color=\"secondary\" size=\"sm\" ><Link to={`/0/ward/`}  state={item.id} className=\"edit\" style={{color:'white', textDecoration:'none'}}> Edit</Link></CButton> : '' }\r\n       { permissions.indexOf(\"DELETE_WARDS\") > -1? <CButton color=\"danger\" size=\"sm\" > <Link to={'/delete'}  state={item.id +'&/ward&/ward/'} className=\"delete\" style={{color:'white', textDecoration:'none'}}>Delete</Link></CButton> :''}\r\n        </CButtonGroup></CTableDataCell>\r\n       </CTableRow>\r\n            ))\r\n           \r\n        }\r\n      </CTableBody>\r\n       </CTable>\r\n     \r\n       <Stack spacing={2}>\r\n      <Pagination count={data.totalPages} page={page} onChange={handleChange} variant=\"outlined\" shape=\"rounded\"  color=\"secondary\" />\r\n    </Stack>\r\n    \r\n       </DocsExample>\r\n       </CCardBody>\r\n       </CCard>\r\n       </CCol>\r\n       </CRow>\r\n      \r\n      \r\n        \r\n        \r\n       \r\n       \r\n    )\r\n}\r\n\r\nexport default ListWard"],"names":["startIndex","per_page","_useState","useState","_useState2","_slicedToArray","ward","setWards","_useState3","_useState4","data","setData","_useState5","_useState6","page","setPage","_useContext","useContext","AuthContext","currentUser","permissions","navigate","useNavigate","useEffect","loadItem","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","app","get","concat","then","res","catch","err","showToastMessage","t0","stop","_x","apply","arguments","indexOf","handleChange","_ref2","_callee2","value","_context2","preventDefault","_x2","_x3","_jsx","CRow","children","CCol","xs","_jsxs","CCard","className","CCardHeader","style","backgroundColor","color","CCardBody","DocsExample","href","add","showAdd","CTable","striped","fontSize","align","responsive","CTableHead","CTableRow","CTableHeaderCell","CTableBody","length","map","item","CTableDataCell","name","code","lga","state","region","country","user","surname","othername","createdAt","updatedAt","CButtonGroup","CButton","size","Link","to","id","textDecoration","Stack","spacing","Pagination","count","totalPages","onChange","variant","shape"],"sourceRoot":""}