{"version":3,"file":"static/js/6747.c5117584.chunk.js","mappings":"wKAsDI,UArDc,WAEV,IAAMA,EAAY,CAAC,CAAEC,GAAI,IAAKC,YAAa,WAAY,CAAED,GAAI,IAAKC,YAAa,UAAY,CAAED,GAAI,IAAKC,YAAa,YACnHC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAgB1B,OACEI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kDACJF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SACEF,UAAU,mBACVG,KAAK,WACLZ,GAAG,YACHM,QAASA,EAAQO,SAAWd,EAAUc,OACtCC,SAvBqB,SAACC,GAC5BR,EACEQ,EAAEC,OAAOV,QAAUP,EAAUkB,KAAI,SAACC,GAAC,OAAKA,EAAEjB,WAAW,IAAI,GAE7D,KAqBMU,EAAAA,EAAAA,KAAA,SAAOF,UAAU,mBAAmBU,QAAQ,YAAWT,SAAC,kBAIzDX,EAAUkB,KAAI,SAACC,GAAC,OACfV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BC,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,SACEF,UAAU,mBACVG,KAAK,WACLZ,GAAIkB,EAAElB,GACNM,QAASA,EAAQc,SAASF,EAAEjB,aAC5Ba,SAAU,SAACC,GAAC,OA9BM,SAACA,EAAGG,GAC9BX,GAAW,SAACc,GAAW,OACrBN,EAAEC,OAAOV,QAAO,GAAAgB,QAAAC,EAAAA,EAAAA,GACRF,GAAW,CAAEH,EAAEjB,cACnBoB,EAAYG,QAAO,SAACC,GAAI,OAAKA,IAASP,EAAEjB,WAAW,GAAC,GAE5D,CAwB2ByB,CAAoBX,EAAGG,EAAE,KAE5CP,EAAAA,EAAAA,KAAA,SAAOF,UAAU,mBAAmBU,QAASD,EAAElB,GAAGU,SAC/CQ,EAAEjB,gBAT4CiB,EAAElB,GAW/C,KAERW,EAAAA,EAAAA,KAAA,KAAAD,SAAIJ,EAAQqB,KAAK,UAIzB,C","sources":["pages/printout.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nconst PrintForm = ()=>{\r\n   \r\n        const countries = [{ id: \"1\", countryName: \"AMERICA\" },{ id: \"2\", countryName: \"AFRICA\" }, { id: \"3\", countryName: \"ENGLAND\" }];\r\n        const [checked, setChecked] = useState([]);\r\n\r\n        const handleCheckAllChange = (e) => {\r\n          setChecked(\r\n            e.target.checked ? countries.map((c) => c.countryName) : []\r\n          );\r\n        };\r\n\r\n        const handleCountryChange = (e, c) => {\r\n          setChecked((prevChecked) =>\r\n            e.target.checked\r\n              ? [...prevChecked, c.countryName]\r\n              : prevChecked.filter((item) => item !== c.countryName)\r\n          );\r\n        };\r\n\r\n        return (\r\n          <div className=\"container\">\r\n            <h3>React Js Checkbox Select All | Unselect All </h3>\r\n            <div className=\"form-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"selectAll\"\r\n                checked={checked.length === countries.length}\r\n                onChange={handleCheckAllChange}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"selectAll\">\r\n                Select all\r\n              </label>\r\n            </div>\r\n            {countries.map((c) => (\r\n              <div className=\"form-check form-check-inline\" key={c.id}>\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  id={c.id}\r\n                  checked={checked.includes(c.countryName)}\r\n                  onChange={(e) => handleCountryChange(e, c)}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor={c.id}>\r\n                  {c.countryName}\r\n                </label>\r\n              </div>\r\n            ))}\r\n            <p>{checked.join(\", \")}</p>\r\n          </div>\r\n        );\r\n\r\n    }\r\n    export default PrintForm"],"names":["countries","id","countryName","_useState","useState","_useState2","_slicedToArray","checked","setChecked","_jsxs","className","children","_jsx","type","length","onChange","e","target","map","c","htmlFor","includes","prevChecked","concat","_toConsumableArray","filter","item","handleCountryChange","join"],"sourceRoot":""}