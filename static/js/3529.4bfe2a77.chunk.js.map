{"version":3,"file":"static/js/3529.4bfe2a77.chunk.js","mappings":"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","sources":["helpers/paging_indexes.js","pages/gifship/listall.jsx"],"sourcesContent":["\r\nexport const startIndex = 1;\r\nexport const per_page = 30;\r\n//1692950350","import app from '../../helpers/axiosConfig'\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Pagination, Stack } from '@mui/material';\r\nimport { per_page, startIndex } from '../../helpers/paging_indexes';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport showToastMessage from '../../components/toast';\r\nimport moment from 'moment';\r\nimport {\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCardImage,\r\n  CCardText,\r\n  CCardTitle,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableCaption,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { DocsExample } from '../../components'\r\n\r\nconst GifshipList = () =>{\r\n       const [getGifship, setGifship] = useState([]);\r\n       const [page, setPage] = React.useState(1);\r\n        const [data, setData] = useState([]);\r\n        const {currentUser, permissions } = useContext(AuthContext);\r\n        const navigate = useNavigate()\r\n        const [canAdd, setcanAdd]= useState(false)\r\n\r\nuseEffect(()=>{\r\n   const load = e =>{\r\n    if(permissions.indexOf(\"ADD_GIFSHIP_TYPE\") > -1){\r\n      setcanAdd(true) \r\n    }\r\n    }\r\n    load()\r\nconst loadItem = async e =>{\r\n try{\r\n          \r\n        await app.get(`/gifshipList/${startIndex}/${per_page}`)\r\n        .then(res=>{\r\n          setGifship(res.data.res);\r\n          setData(res.data)\r\n        \r\n        })\r\n        .catch(err=>{\r\n          showToastMessage('Error occured while trying loading data', 'error')\r\n        })\r\n    }catch(err){\r\n         showToastMessage('Error occured while trying loading data', 'error')\r\n        }\r\n        \r\n    }\r\n   \r\n         loadItem() \r\n         //===============================ADD_GIFSHIP_TYPE\r\nif(!(permissions.indexOf(\"VIEW_GIFSHIP_TYPE\") > -1)){\r\n  navigate('/')\r\n}\r\n\r\n  }, [permissions, currentUser, navigate])\r\n   const handleChange = async (e, value) => {\r\n    setPage(value);\r\n    await app.get(`/gifshipList/${page}/${per_page}`)\r\n        .then(res=>{\r\n          setGifship(res.data.res);\r\n          setData(res.data)\r\n        })\r\n        .catch(err=>{\r\n          showToastMessage('Error occured while trying loading data', 'error')\r\n        })\r\n   }\r\n    \r\n    return (\r\n                  <CRow >\r\n<CCol xs={12} >\r\n        <CCard className=\"mb-12\" >\r\n         <CCardHeader style={{backgroundColor:'skyblue'}}>\r\n            <strong style={{color:'white'}}>LIST OF PROGRAMMES</strong>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Using the Add New button to create new Item.\r\n            </p>\r\n           \r\n            <DocsExample href=\"gifshipt\" add=\"PROGRAMME\" showAdd={canAdd}>\r\n      <CTable striped style={{fontSize:'12px'}} align=\"middle\" responsive>\r\n       <CTableHead>\r\n       <CTableRow>\r\n       <CTableHeaderCell>Programme</CTableHeaderCell>\r\n       <CTableHeaderCell>Sub-Programme</CTableHeaderCell>\r\n        <CTableHeaderCell>Editedby</CTableHeaderCell>\r\n        <CTableHeaderCell>Created_At</CTableHeaderCell>\r\n        <CTableHeaderCell>Updated_At</CTableHeaderCell>\r\n       <CTableHeaderCell></CTableHeaderCell>\r\n       </CTableRow>\r\n       </CTableHead>\r\n       <CTableBody>\r\n       {\r\n            getGifship.length ===0? '': getGifship.map((item)=>(\r\n            <CTableRow key={item.id}>\r\n       <CTableDataCell>{item.gifship.name}</CTableDataCell>\r\n         <CTableDataCell>{item.name}</CTableDataCell>\r\n       <CTableDataCell>{item.user.surname + ' ' + item.user.othername}</CTableDataCell>\r\n       <CTableDataCell>{moment(item.createdAt).format('YYYY MM DD hh:ss:mm')}</CTableDataCell>\r\n       <CTableDataCell>{moment(item.updatedAt).format('YYYY MM DD hh:ss:mm')}</CTableDataCell>\r\n       <CTableDataCell>\r\n       <CButtonGroup>\r\n       { permissions.indexOf(\"EDIT_GIFSHIP_TYPE\") > -1? <CButton color=\"secondary\" size=\"sm\" ><Link to={`/gifshipedit/0`} state={item.id}  style={{color:'white', textDecoration:'none'}}>Edit</Link></CButton> : ''}\r\n        { permissions.indexOf(\"DELETE_GIFSHIP_TYPE\") > -1? <CButton color=\"danger\" size=\"sm\" ><Link to={'/delete'}  state={item.id +'&/gifship-list&/gifshipList/'} style={{color:'white', textDecoration:'none'}}>Delete</Link></CButton>:''}\r\n       </CButtonGroup>  </CTableDataCell>\r\n       </CTableRow>\r\n            ))\r\n        }\r\n     \r\n       </CTableBody>\r\n    </CTable>\r\n       <p>\r\n       <Stack spacing={2}>\r\n      <Pagination count={data.totalPages} page={page} onChange={handleChange} variant=\"outlined\" shape=\"rounded\"  color=\"secondary\" />\r\n    </Stack>\r\n    </p>\r\n   \r\n    </DocsExample>\r\n    </CCardBody>\r\n    </CCard>\r\n    </CCol>\r\n    </CRow>\r\n    \r\n\r\n     \r\n       \r\n    )\r\n}\r\n\r\nexport default GifshipList"],"names":["startIndex","per_page","_useState","useState","_useState2","_slicedToArray","getGifship","setGifship","_React$useState","React","_React$useState2","page","setPage","_useState3","_useState4","data","setData","_useContext","useContext","AuthContext","currentUser","permissions","navigate","useNavigate","_useState5","_useState6","canAdd","setcanAdd","useEffect","indexOf","loadItem","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","app","get","concat","then","res","catch","err","showToastMessage","t0","stop","_x","apply","arguments","handleChange","_ref2","_callee2","value","_context2","_x2","_x3","_jsx","CRow","children","CCol","xs","_jsxs","CCard","className","CCardHeader","style","backgroundColor","color","CCardBody","DocsExample","href","add","showAdd","CTable","striped","fontSize","align","responsive","CTableHead","CTableRow","CTableHeaderCell","CTableBody","length","map","item","CTableDataCell","gifship","name","user","surname","othername","moment","createdAt","format","updatedAt","CButtonGroup","CButton","size","Link","to","state","id","textDecoration","Stack","spacing","Pagination","count","totalPages","onChange","variant","shape"],"sourceRoot":""}