{"version":3,"file":"static/js/3264.acd35833.chunk.js","mappings":"wKACO,IAAMA,EAAa,EACbC,EAAW,E,6SCyIxB,UA5G2B,WACpB,IAAAC,GAAiCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAUF,EAAA,GAAEG,EAAUH,EAAA,GAC5BI,EAAwBC,EAAAA,SAAe,GAAEC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlCG,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAwBV,EAAAA,EAAAA,UAAS,IAAGW,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACrBG,GAAoCC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxCC,EAAWH,EAAXG,YAAaC,EAAWJ,EAAXI,YACjBC,GAAWC,EAAAA,EAAAA,OAGrBC,EAAAA,EAAAA,YAAU,WACV,IAAMC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAC,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGXC,EAAAA,EAAIC,IAAI,mBAADC,OAAoBtC,EAAAA,EAAU,KAAAsC,OAAIrC,EAAAA,IAC9CsC,MAAK,SAAAC,GACLjC,EAAWiC,EAAIzB,KAAKyB,KACpBxB,EAAQwB,EAAIzB,KACb,IACC0B,OAAM,SAAAC,IACNC,EAAAA,EAAAA,GAAiB,mCAAoC,QACtD,IAAE,OAAAV,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,UAEDU,EAAAA,EAAAA,GAAiB,mCAAoC,SAAQ,wBAAAV,EAAAY,OAAA,GAAAf,EAAA,kBAGhE,gBAfSgB,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,KAiBLvB,IAEJJ,EAAY4B,QAAQ,yBAA2B,GAClD3B,EAAS,IAET,GAAG,CAACD,EAAaD,EAAaE,IAC9B,IAAM4B,EAAY,eAAAC,GAAAxB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAuB,EAAOrB,EAAGsB,GAAK,OAAAzB,EAAAA,EAAAA,KAAAI,MAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,OACf,OAAfvB,EAAQyC,GAAOC,EAAAnB,KAAA,EACTC,EAAAA,EAAIC,IAAI,mBAADC,OAAoB3B,EAAI,KAAA2B,OAAIrC,EAAAA,IACzCsC,MAAK,SAAAC,GACLjC,EAAWiC,EAAIzB,KAAKyB,KACpBxB,EAAQwB,EAAIzB,KACb,IACC0B,OAAM,SAAAC,IACNC,EAAAA,EAAAA,GAAiB,mCAAoC,QACtD,IAAE,wBAAAW,EAAAT,OAAA,GAAAO,EAAA,KAEN,gBAXiBG,EAAAC,GAAA,OAAAL,EAAAJ,MAAA,KAAAC,UAAA,KAahB,OAEGS,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAAC,UACZF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAI,GAAGF,UACLG,EAAAA,EAAAA,MAACC,EAAAA,GAAK,CAACC,UAAU,QAAOL,SAAA,EACvBF,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CAACC,MAAO,CAACC,gBAAgB,WAAWR,UAC7CF,EAAAA,EAAAA,KAAA,UAAQS,MAAO,CAACE,MAAM,SAAST,SAAC,wBAElCG,EAAAA,EAAAA,MAACO,EAAAA,GAAS,CAAAV,SAAA,EACRF,EAAAA,EAAAA,KAAA,KAAGO,UAAU,6BAA4BL,SAAC,kDAI1CG,EAAAA,EAAAA,MAACQ,EAAAA,GAAW,CAACC,KAAK,qBAAqBC,IAAI,oBAAoBC,QAASpD,EAAY4B,QAAQ,yBAA2B,EAAgBU,SAAA,EAC7IG,EAAAA,EAAAA,MAACY,EAAAA,GAAM,CAACC,SAAO,EAACT,MAAO,CAACU,SAAS,QAASC,MAAM,SAASC,YAAU,EAAAnB,SAAA,EAClEF,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAAApB,UACXG,EAAAA,EAAAA,MAACkB,EAAAA,GAAS,CAAArB,SAAA,EACVF,EAAAA,EAAAA,KAACwB,EAAAA,GAAgB,CAAAtB,SAAC,eAClBF,EAAAA,EAAAA,KAACwB,EAAAA,GAAgB,CAAAtB,SAAC,kBAClBF,EAAAA,EAAAA,KAACwB,EAAAA,GAAgB,CAAAtB,SAAC,aAClBF,EAAAA,EAAAA,KAACwB,EAAAA,GAAgB,CAAAtB,SAAC,wBACjBF,EAAAA,EAAAA,KAACwB,EAAAA,GAAgB,CAAAtB,SAAC,qBAClBF,EAAAA,EAAAA,KAACwB,EAAAA,GAAgB,CAAAtB,SAAC,cAClBF,EAAAA,EAAAA,KAACwB,EAAAA,GAAgB,CAAAtB,SAAC,kBAClBF,EAAAA,EAAAA,KAACwB,EAAAA,GAAgB,CAAAtB,SAAC,kBACnBF,EAAAA,EAAAA,KAACwB,EAAAA,GAAgB,UAGjBxB,EAAAA,EAAAA,KAACyB,EAAAA,GAAU,CAAAvB,SAENrD,EAAW6E,KAAI,SAACC,GAAI,OACpBtB,EAAAA,EAAAA,MAACkB,EAAAA,GAAS,CAAArB,SAAA,EACfF,EAAAA,EAAAA,KAAC4B,EAAAA,GAAc,CAAA1B,SAAEyB,EAAKE,QAAQC,QAC5B9B,EAAAA,EAAAA,KAAC4B,EAAAA,GAAc,CAAA1B,SAAEyB,EAAKI,YAAYD,QAClC9B,EAAAA,EAAAA,KAAC4B,EAAAA,GAAc,CAAA1B,SAAEyB,EAAKG,QACrB9B,EAAAA,EAAAA,KAAC4B,EAAAA,GAAc,CAAA1B,SAAEyB,EAAKK,UACtBhC,EAAAA,EAAAA,KAAC4B,EAAAA,GAAc,CAAA1B,SAAEyB,EAAKM,YACzBjC,EAAAA,EAAAA,KAAC4B,EAAAA,GAAc,CAAA1B,SAAEyB,EAAKO,KAAKC,QAAU,IAAMR,EAAKO,KAAKE,aACrDpC,EAAAA,EAAAA,KAAC4B,EAAAA,GAAc,CAAA1B,SAAEmC,IAAOV,EAAKW,WAAWC,OAAO,0BAC/CvC,EAAAA,EAAAA,KAAC4B,EAAAA,GAAc,CAAA1B,SAAEmC,IAAOV,EAAKa,WAAWD,OAAO,0BAC/ClC,EAAAA,EAAAA,MAACuB,EAAAA,GAAc,CAAA1B,SAAA,EACfG,EAAAA,EAAAA,MAACoC,EAAAA,GAAY,CAAAvC,SAAA,CACbtC,EAAY4B,QAAQ,yBAA2B,GAAGQ,EAAAA,EAAAA,KAAC0C,EAAAA,GAAO,CAAC/B,MAAM,UAAUgC,KAAK,KAAIzC,UAACF,EAAAA,EAAAA,KAAC4C,EAAAA,GAAI,CAACC,GAAE,mBAAAhE,OAAqB,EAAC,SAAUiE,MAAOnB,EAAKoB,GAAKtC,MAAO,CAACE,MAAM,QAASqC,eAAe,QAAQ9C,SAAC,WAAuB,GACjNtC,EAAY4B,QAAQ,2BAA6B,GAAGQ,EAAAA,EAAAA,KAAC0C,EAAAA,GAAO,CAAC/B,MAAM,SAASgC,KAAK,KAAIzC,UAACF,EAAAA,EAAAA,KAAC4C,EAAAA,GAAI,CAACC,GAAI,UAAYC,MAAOnB,EAAKoB,GAAI,oCAAqCtC,MAAO,CAACE,MAAM,QAASqC,eAAe,QAAQ9C,SAAC,aAAwB,MAC3N,SACJ,UAMZF,EAAAA,EAAAA,KAACiD,EAAAA,EAAK,CAACC,QAAS,EAAEhD,UACnBF,EAAAA,EAAAA,KAACmD,EAAAA,EAAU,CAACC,MAAO9F,EAAK+F,WAAYnG,KAAMA,EAAMoG,SAAU7D,EAAc8D,QAAQ,WAAWC,MAAM,UAAW7C,MAAM,4BASxH,E","sources":["helpers/paging_indexes.js","pages/gifshipPackage/list.jsx"],"sourcesContent":["\r\nexport const startIndex = 1;\r\nexport const per_page = 30;\r\n//1692950350","import app from '../../helpers/axiosConfig'\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Pagination, Stack } from '@mui/material';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport { per_page, startIndex } from '../../helpers/paging_indexes';\r\nimport showToastMessage from '../../components/toast';\r\nimport moment from 'moment'\r\nimport {\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCardImage,\r\n  CCardText,\r\n  CCardTitle,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableCaption,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { DocsExample } from '../../components'\r\n\r\n\r\nconst GifshipPackageList = () =>{\r\n       const [getGifship, setGifship] = useState([]);\r\n        const [page, setPage] = React.useState(1);\r\n        const [data, setData] = useState([]);\r\n       const {currentUser, permissions } = useContext(AuthContext);\r\n    const navigate = useNavigate()\r\n       \r\n\r\nuseEffect(()=>{\r\nconst loadItem = async e =>{\r\n try{\r\n          \r\n       await app.get(`/gifshipPackage/${startIndex}/${per_page}`)\r\n       .then(res=>{\r\n        setGifship(res.data.res);\r\n        setData(res.data)\r\n       })\r\n       .catch(err=>{\r\n        showToastMessage('Error occured while loading data', 'error')\r\n       })  \r\n    }catch(err){\r\n        showToastMessage('Error occured while loading data', 'error')\r\n        }\r\n        \r\n    }\r\n   \r\n         loadItem() \r\n         //===============================\r\nif(!(permissions.indexOf(\"VIEW_GIFSHIP_PACKAGE\") > -1)){\r\n  navigate('/')\r\n}\r\n  }, [permissions, currentUser, navigate])\r\n  const handleChange = async (e, value) => {\r\n        setPage(value);\r\n        await app.get(`/gifshipPackage/${page}/${per_page}`)\r\n       .then(res=>{\r\n        setGifship(res.data.res);\r\n        setData(res.data)\r\n       })\r\n       .catch(err=>{\r\n        showToastMessage('Error occured while loading data', 'error')\r\n       })\r\n\r\n  }\r\n   \r\n    return (\r\n      \r\n       <CRow >\r\n<CCol xs={12} >\r\n        <CCard className=\"mb-12\" >\r\n         <CCardHeader style={{backgroundColor:'skyblue'}}>\r\n            <strong style={{color:'white'}}>LIST OF PACKAGES</strong>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Using the Add New button to create new Item.\r\n            </p>\r\n           \r\n            <DocsExample href=\"gifshipPackage/add\" add=\"PROGRAMME PACKAGE\" showAdd={permissions.indexOf(\"VIEW_GIFSHIP_PACKAGE\") > -1? true : false}>\r\n      <CTable striped style={{fontSize:'12px'}} align=\"middle\" responsive>\r\n       <CTableHead>\r\n       <CTableRow>\r\n       <CTableHeaderCell>Programme</CTableHeaderCell>\r\n       <CTableHeaderCell>SubProgramme</CTableHeaderCell>\r\n       <CTableHeaderCell>Package</CTableHeaderCell>\r\n       <CTableHeaderCell>Amount(per person)</CTableHeaderCell>\r\n        <CTableHeaderCell>Duration (Days)</CTableHeaderCell>\r\n        <CTableHeaderCell>Editedby</CTableHeaderCell>\r\n        <CTableHeaderCell>Created_Date</CTableHeaderCell>\r\n        <CTableHeaderCell>Updated_Date</CTableHeaderCell>\r\n       <CTableHeaderCell></CTableHeaderCell>\r\n       </CTableRow>\r\n       </CTableHead>\r\n       <CTableBody>\r\n       {\r\n            getGifship.map((item)=>(\r\n            <CTableRow>\r\n       <CTableDataCell>{item.gifship.name}</CTableDataCell>\r\n         <CTableDataCell>{item.gifshiptype.name}</CTableDataCell>\r\n         <CTableDataCell>{item.name}</CTableDataCell>\r\n          <CTableDataCell>{item.amount}</CTableDataCell>\r\n          <CTableDataCell>{item.duration}</CTableDataCell>\r\n       <CTableDataCell>{item.user.surname + ' ' + item.user.othername}</CTableDataCell>\r\n       <CTableDataCell>{moment(item.createdAt).format('YYYY MM DD hh:ss:mm')}</CTableDataCell>\r\n       <CTableDataCell>{moment(item.updatedAt).format('YYYY MM DD hh:ss:mm')}</CTableDataCell>\r\n       <CTableDataCell>\r\n       <CButtonGroup>\r\n      {permissions.indexOf(\"EDIT_GIFSHIP_PACKAGE\") > -1? <CButton color='primary' size='sm'><Link to={`/gifshipPackage/${0}/edit`}  state={item.id}  style={{color:'white', textDecoration:'none'}}>Edit</Link></CButton> :''}\r\n        { permissions.indexOf(\"DELETE_GIFSHIP_PACKAGE\") > -1? <CButton color='danger' size='sm'><Link to={'/delete'}  state={item.id +'&/gifshipPackage&/gifshipPackage/'} style={{color:'white', textDecoration:'none'}}>Delete</Link></CButton>:''}\r\n        </CButtonGroup> </CTableDataCell>\r\n       </CTableRow>\r\n            ))\r\n        }\r\n      </CTableBody>\r\n       </CTable>\r\n     \r\n       <Stack spacing={2}>\r\n      <Pagination count={data.totalPages} page={page} onChange={handleChange} variant=\"outlined\" shape=\"rounded\"  color=\"secondary\" />\r\n    </Stack>\r\n      </DocsExample>\r\n        </CCardBody>\r\n      </CCard>\r\n      </CCol>\r\n       </CRow>\r\n      \r\n    )\r\n}\r\n\r\nexport default GifshipPackageList"],"names":["startIndex","per_page","_useState","useState","_useState2","_slicedToArray","getGifship","setGifship","_React$useState","React","_React$useState2","page","setPage","_useState3","_useState4","data","setData","_useContext","useContext","AuthContext","currentUser","permissions","navigate","useNavigate","useEffect","loadItem","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","app","get","concat","then","res","catch","err","showToastMessage","t0","stop","_x","apply","arguments","indexOf","handleChange","_ref2","_callee2","value","_context2","_x2","_x3","_jsx","CRow","children","CCol","xs","_jsxs","CCard","className","CCardHeader","style","backgroundColor","color","CCardBody","DocsExample","href","add","showAdd","CTable","striped","fontSize","align","responsive","CTableHead","CTableRow","CTableHeaderCell","CTableBody","map","item","CTableDataCell","gifship","name","gifshiptype","amount","duration","user","surname","othername","moment","createdAt","format","updatedAt","CButtonGroup","CButton","size","Link","to","state","id","textDecoration","Stack","spacing","Pagination","count","totalPages","onChange","variant","shape"],"sourceRoot":""}