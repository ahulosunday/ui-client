{"version":3,"file":"static/js/1466.7c5dbc6b.chunk.js","mappings":"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","sources":["helpers/paging_indexes.js","pages/regions/list.jsx"],"sourcesContent":["\r\nexport const startIndex = 1;\r\nexport const per_page = 30;\r\n//1692950350","import app from '../../helpers/axiosConfig'\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { per_page, startIndex } from '../../helpers/paging_indexes';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport showToastMessage from '../../components/toast';\r\nimport { Pagination, Stack } from '@mui/material';\r\nimport {\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCardImage,\r\n  CCardText,\r\n  CCardTitle,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableCaption,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { DocsExample } from '../../components'\r\n\r\n\r\nconst ListRegion = () =>{\r\n   const [region, setRegion] = useState([]);\r\n   const {currentUser, permissions } = useContext(AuthContext);\r\n    const navigate = useNavigate()\r\n     const [page, setPage] = React.useState(1);\r\n        const [data, setData] = useState([]);\r\n        const [canAdd, setcanAdd] = useState(false)\r\n\r\nuseEffect(()=>{\r\nconst loadItem = async e =>{\r\n try{\r\n         \r\n        await app.get(`/region/${startIndex}/${per_page}/0`)\r\n        .then(res=>{\r\n          setRegion(res.data.res)\r\n          setData(res.data)\r\n        }).catch(err=>{\r\n          showToastMessage('Error occured while loading data ...' + err, 'error')\r\n        })\r\n    }catch(err){\r\n        showToastMessage('Error occured while loading data ...', 'error')\r\n        }\r\n        \r\n    }\r\n   \r\n         loadItem() \r\n         //===============================\r\n         if(!(permissions.indexOf(\"VIEW_REGIONS\") > -1)){\r\n          navigate('/')\r\n         }\r\n\r\n  }, [permissions, navigate, currentUser])\r\n    const handleChange = async (e, value) => {\r\n    setPage(value);\r\n    try{\r\n     await app.get(`/region/${page}/${per_page}/0`)\r\n        .then(res=>{\r\n          setRegion(res.data.res)\r\n          setData(res.data)\r\n        }).catch(err=>{\r\n          showToastMessage('Error occured while loading data ...' + err, 'error')\r\n        })\r\n\r\n    }\r\n    catch(errs){\r\n     showToastMessage('Error occured while loading data ...', 'error')\r\n    }\r\n\r\n    }\r\n    return (\r\n             <CRow >\r\n<CCol xs={12} >\r\n        <CCard className=\"mb-12\" >\r\n         <CCardHeader style={{backgroundColor:'skyblue'}}>\r\n            <strong style={{color:'white'}}>LIST OF REGIONS</strong>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Using the Add New button to create new regions.\r\n            </p>\r\n           \r\n            <DocsExample href=\"region/add\" add=\"Regions List\" showAdd={permissions.indexOf(\"ADD_REGIONS\") > -1? true:false}>\r\n       <CTable striped style={{fontSize:'12px'}} align=\"middle\" responsive>\r\n       <CTableHead>\r\n       <CTableRow>\r\n       <CTableHeaderCell>REGION</CTableHeaderCell>\r\n        <CTableHeaderCell>COUNTRY</CTableHeaderCell>\r\n       <CTableHeaderCell>EDITEDBY</CTableHeaderCell>\r\n       <CTableHeaderCell>CREATED_DATE</CTableHeaderCell>\r\n       <CTableHeaderCell>LAST_UPDATED</CTableHeaderCell>\r\n       <CTableHeaderCell></CTableHeaderCell>\r\n       </CTableRow>\r\n</CTableHead>\r\n<CTableBody>\r\n       {\r\n        \r\n            region.length === 0? '': region.map((item)=>(\r\n            <CTableRow key={item.id}>\r\n       <CTableDataCell>{item.name}</CTableDataCell>\r\n       <CTableDataCell>{item.country.name}</CTableDataCell>\r\n        <CTableDataCell>{item.user.surname + ' ' + item.user.othername}</CTableDataCell>\r\n        <CTableDataCell>{item.createdAt}</CTableDataCell>\r\n        <CTableDataCell>{item.updatedAt}</CTableDataCell>\r\n       <CTableDataCell>\r\n        <CButtonGroup >\r\n       { permissions.indexOf(\"EDIT_REGIONS\") > -1? <CButton color=\"secondary\" size=\"sm\" ><Link to={`/${0}/region/`} state={item.id} className=\"edit\" style={{color:'white', textDecoration:'none'}}> Edit</Link></CButton> : ''}\r\n        { permissions.indexOf(\"DELETE_REGIONS\") > -1? <CButton color=\"danger\" size=\"sm\" ><Link to={'/delete'}  state={item.id +'&/region&/region/'} className=\"delete\" style={{color:'white', textDecoration:'none'}}>Delete</Link></CButton> : ''}\r\n        </CButtonGroup>\r\n         </CTableDataCell>\r\n       </CTableRow>\r\n            ))\r\n           \r\n        }\r\n      </CTableBody>\r\n       </CTable>\r\n       <Stack spacing={2}>\r\n      <Pagination count={data.totalPages} page={page} onChange={handleChange} variant=\"outlined\" shape=\"rounded\"  color=\"secondary\" />\r\n    </Stack>\r\n       </DocsExample>\r\n     </CCardBody>\r\n     </CCard></CCol></CRow>\r\n        \r\n        \r\n       \r\n       \r\n    )\r\n}\r\n\r\nexport default ListRegion"],"names":["startIndex","per_page","_useState","useState","_useState2","_slicedToArray","region","setRegion","_useContext","useContext","AuthContext","currentUser","permissions","navigate","useNavigate","_React$useState","React","_React$useState2","page","setPage","_useState3","_useState4","data","setData","_useState5","_useState6","useEffect","loadItem","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","app","get","concat","then","res","catch","err","showToastMessage","t0","stop","_x","apply","arguments","indexOf","handleChange","_ref2","_callee2","value","_context2","_x2","_x3","_jsx","CRow","children","CCol","xs","_jsxs","CCard","className","CCardHeader","style","backgroundColor","color","CCardBody","DocsExample","href","add","showAdd","CTable","striped","fontSize","align","responsive","CTableHead","CTableRow","CTableHeaderCell","CTableBody","length","map","item","CTableDataCell","name","country","user","surname","othername","createdAt","updatedAt","CButtonGroup","CButton","size","Link","to","state","id","textDecoration","Stack","spacing","Pagination","count","totalPages","onChange","variant","shape"],"sourceRoot":""}