{"version":3,"file":"static/js/6961.bd2de5df.chunk.js","mappings":"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","sources":["helpers/customAlphabet.js","helpers/hostUrl.js","views/pages/payment/GifshipModal.jsx"],"sourcesContent":["import { customAlphabet } from 'nanoid'\r\nexport const nanoid = customAlphabet('1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ0987654321', 10)\r\n\r\n\r\nconst gpc = require('generate-pincode')\r\nexport const pin = gpc(11)","const hostUrl = 'https://www.google.com';\r\nconst emailFrom = 'ahulosunday@gmail.com'\r\nexport default hostUrl;\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport showToastMessage from '../../../components/toast';\r\nimport moment from 'moment';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport app from '../../../helpers/axiosConfig';\r\nimport { nanoid, pin } from '../../../helpers/customAlphabet';\r\nimport { render } from \"@react-email/render\";\r\nimport hostUrl from '../../../helpers/hostUrl';\r\n\r\nexport default function ToggleClick (props){\r\n const [open, setOpen] = React.useState(false);\r\n const [user, setUser] = React.useState([]);\r\n  const navigate = useNavigate()\r\n  const [ amount, setAmount ] = React.useState(0)\r\n  const [gifship, setGifship] = React.useState([])\r\n  const [valids, setValid] = React.useState(false)\r\n\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSubmit = async ()=>{\r\n     const num = document.getElementById('number').value;\r\n     const sdate = document.getElementById('sdate').value;\r\n     const amount = document.getElementById('amount').value;\r\n     //code must be 11 digits\r\n   let code = pin;\r\n\r\n   var doc = document.getElementById('continue');\r\n   doc.innerHTML =\"contacting payment gateway, please wait ...\";\r\n   doc.disabled = true;\r\n   //implement payment gateway here ----------------\r\n   showToastMessage('Transaction completed with status: OK, Registration details has been sent to your email ...', 'success')\r\n // payWithPaystack()\r\n\r\n const status = 'OK'\r\n if(status === 'OK'){\r\n  let  expired_date= moment(Date.parse(sdate) + ((gifship.duration * 1000 * 60 * 60 * 24))).format('YYYY-MM-DD')\r\n  await app.post('/user-rrr/', {rrr_number:code, userId:user.id, activated:1, activatedby:user.id,\tamount:amount,\tduration:gifship.duration,\tgifshipId:gifship.gifshipId,\tgifshipTypeId:gifship.gifshipTypeId,\tgifshipPackageId:gifship.id,\tactivated_date:sdate,\texpired_date:expired_date, maxNumber:num, minNumber:num})\r\n       .then(async res =>{\r\n       \r\n        let insertedId = res.data.id;\r\n        await app.put(`/activate/${user.id}/`,{}).then( async res1=>{\r\n         await app.post('/code/0', {user_rrrId: insertedId, userId: user.id, code:code })\r\n         .then(red=>{\r\n         }).catch(errs=>{\r\n         \r\n         })\r\n          .then(async res2 =>{\r\n          \r\n            const emailHtml = render(<><h2>Congratulations!</h2><p>Your account has been created successfully.<br />Username: {user.username} <br />password: ****** <br /> Registration code: {code}<br />Visit <a href={hostUrl}>here</a> to login</p></>);\r\n             await app.post('/sendmail/user/auth/email/send',{to: user.email, msg: emailHtml, subject: 'Registration Confirmation'})\r\n              navigate('/login')\r\n          })\r\n        })\r\n       }).catch(err3=>{\r\n         showToastMessage('Something went wrong ...', 'error')\r\n       })\r\n }\r\n else{\r\n  doc.innerHTML =\"continue\";\r\n   doc.disabled = false;\r\n   showToastMessage('Transaction completed with status: FAILED ...', 'error')\r\n }\r\n}\r\n\r\nconst calculate = async ()=>{\r\n const num = document.getElementById('number').value;\r\n const option = props.option\r\n  try{\r\n    await app.get(`/findUserByUsername/${props.user}/1/1/1/1`)\r\n       .then(async res=>{\r\n        setUser(res.data)\r\n        const active = await app.get(`/user-rrr/${res.data.id}/0/`)\r\n     if(active.data[0]?.length === 0) setValid(true)\r\n     const st = moment(active.data[0]?.expired_date).format('MMMM YYYY')\r\n      const a = moment()\r\n      const diff = a.diff(st, 'days')\r\n      if(diff > -1){\r\n         setValid(true)\r\n         }\r\n      else{\r\n         setValid(false)\r\n          showToastMessage('You still have active payment on your account. If you continue it will override the existing one. Expired date: ' + moment(active.data[0].expired_date).format('Do MMMM YYYY'), 'warning')\r\n         }\r\n\r\n       })\r\n       .catch(err=>{\r\n        showToastMessage(err, 'warning')\r\n      \r\n       })\r\n     \r\n\r\n       await app.get(`/gifshipPackage/${option}`)\r\n       .then(res=>{\r\n        setGifship(res.data);\r\n        if(num > res.data.maxNumber){\r\n          showToastMessage('please choose another package ...', 'error')\r\n          setValid(false)\r\n        }\r\n        else if(num < res.data.qty){\r\n          setAmount(res.data.qty * res.data.amount)\r\n          setValid(true)\r\n        }\r\n        else if(num > res.data.qty){\r\n          setAmount(num * res.data.amount)\r\n          setValid(true)\r\n        }\r\n\r\n       })\r\n       .catch(err=>{\r\n        showToastMessage(err.message, 'error')\r\n       })  \r\n    }catch(err){\r\n        showToastMessage(err.message, 'error')\r\n        }\r\n\r\n  }\r\n   \r\n  return (\r\n     <div>\r\n      \r\n      <Link onClick={handleClickOpen} style={{textDecoration:'none'}}>{props.name}</Link>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>[{props.name}] inprogress ...</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please enter the Number of enrolee ...\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"number\"\r\n            label=\"Number of Enrolee \"\r\n            type=\"number\"\r\n            onChange={calculate}\r\n            fullWidth\r\n            variant=\"standard\"\r\n          />\r\n             <TextField\r\n            aria-readonly\r\n            margin=\"dense\"\r\n            label=\"Amount Due\"\r\n            type=\"text\"\r\n            value={'N'+Intl.NumberFormat().format(amount)}\r\n            fullWidth\r\n            variant=\"standard\"\r\n          />\r\n            <TextField\r\n          \r\n            id=\"amount\"\r\n            type=\"hidden\"\r\n            value={amount}\r\n            \r\n          />\r\n           <TextField\r\n            margin=\"dense\"\r\n            id=\"sdate\"\r\n            label=\"Start Date\"\r\n            type=\"date\"\r\n            \r\n            fullWidth\r\n            variant=\"standard\"\r\n          />\r\n          \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          {valids? <Button onClick={handleSubmit} id=\"continue\">Continue</Button>:''}\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n  }\r\n"],"names":["nanoid","customAlphabet","pin","require","gpc","ToggleClick","props","_React$useState","React","_React$useState2","_slicedToArray","open","setOpen","_React$useState3","_React$useState4","user","setUser","navigate","useNavigate","_React$useState5","_React$useState6","amount","setAmount","_React$useState7","_React$useState8","gifship","setGifship","_React$useState9","_React$useState10","valids","setValid","handleClose","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee4","num","sdate","code","doc","expired_date","wrap","_context4","prev","next","document","getElementById","value","innerHTML","disabled","showToastMessage","moment","Date","parse","duration","format","app","post","rrr_number","userId","id","activated","activatedby","gifshipId","gifshipTypeId","gifshipPackageId","activated_date","maxNumber","minNumber","then","_ref2","_callee3","res","insertedId","_context3","data","put","concat","_ref3","_callee2","res1","_context2","user_rrrId","red","catch","errs","_ref4","_callee","res2","emailHtml","_context","render","_jsxs","_Fragment","children","_jsx","username","href","hostUrl","to","email","msg","subject","stop","_x3","apply","arguments","_x2","_x","err3","calculate","_ref5","_callee6","option","_context6","get","_ref6","_callee5","_active$data$","_active$data$2","active","st","a","_context5","sent","length","diff","_x4","err","qty","message","t0","Link","onClick","style","textDecoration","name","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","onChange","fullWidth","variant","Intl","NumberFormat","DialogActions","Button"],"sourceRoot":""}