{"version":3,"file":"static/js/9910.e843fd23.chunk.js","mappings":"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","sources":["helpers/paging_indexes.js","pages/hmo/list.jsx"],"sourcesContent":["\r\nexport const startIndex = 1;\r\nexport const per_page = 30;\r\n//1692950350","import app from '../../helpers/axiosConfig'\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport showToastMessage from '../../components/toast';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Stack from '@mui/material/Stack';\r\nimport { per_page, startIndex } from '../../helpers/paging_indexes';\r\nimport {\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCardImage,\r\n  CCardText,\r\n  CCardTitle,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableCaption,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { DocsExample } from '../../components'\r\n\r\n\r\nconst ListHmo = () =>{\r\n       const [hmo, setHmo] = useState([]);\r\n       const [page, setPage] = React.useState(1);\r\n       const [data, setData] = useState([]);\r\n\r\n   const {currentUser, permissions } = useContext(AuthContext);\r\n    const navigate = useNavigate()\r\n       \r\n\r\nuseEffect(()=>{\r\nconst loadItem = async e =>{\r\n try{ \r\n       await app.get(`/hmos/${startIndex}/${per_page}`)\r\n       .then(res=>{\r\n        setHmo(res.data.res)\r\n        setData(res.data)\r\n       })\r\n       .catch(err=>{\r\n        showToastMessage('Unable to load data, reason:'+err, 'error')\r\n       })\r\n       \r\n    }catch(err){\r\n         showToastMessage('Unable to load data, reason:'+ err, 'error')\r\n        }\r\n        \r\n    }\r\n   \r\n         loadItem() \r\n         //===============================\r\nif(!(permissions.indexOf(\"VIEW_HMOS\") > -1) || !currentUser){\r\n  navigate('/')\r\n}\r\n  }, [permissions, currentUser, navigate])\r\n  //=====================================\r\n  const handleChange = async (e, value) => {\r\n    setPage(value);\r\n        await app.get(`/hmos/${page}/${per_page}`)\r\n       .then(res=>{\r\n        setHmo(res.data.res)\r\n        setData(res.data)\r\n       })\r\n       .catch(err=>{\r\n        showToastMessage('Unable to load data, reason:'+err, 'error')\r\n       })\r\n    };\r\n    return (\r\n       <CRow >\r\n<CCol xs={12} >\r\n        <CCard className=\"mb-12\" >\r\n         <CCardHeader style={{backgroundColor:'skyblue'}}>\r\n            <strong style={{color:'white'}}>LISTS OF HMOs</strong>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Using the Add New button to create new HMO.\r\n            </p>\r\n            <DocsExample href=\"hmo/add\" add=\"HMO LIST\" showAdd={permissions.indexOf(\"ADD_HMOS\") > -1? true: false}>\r\n      <CTable striped style={{fontSize:'12px'}} align=\"middle\" responsive>\r\n       <CTableHead>\r\n       <CTableRow> \r\n       <CTableHeaderCell>HMO_CODE</CTableHeaderCell>\r\n       <CTableHeaderCell>HMO_NAME</CTableHeaderCell>\r\n       <CTableHeaderCell>HMO_ADDRESS</CTableHeaderCell>\r\n       <CTableHeaderCell>OFFICIAL_EMAIL</CTableHeaderCell>\r\n       <CTableHeaderCell>PHONE_NUMBER</CTableHeaderCell>\r\n       <CTableHeaderCell>WARD</CTableHeaderCell>\r\n       <CTableHeaderCell>LGA</CTableHeaderCell>\r\n       <CTableHeaderCell>STATE</CTableHeaderCell>\r\n       <CTableHeaderCell>REGION</CTableHeaderCell>\r\n       <CTableHeaderCell>COUNTRY</CTableHeaderCell>\r\n       <CTableHeaderCell>EDITED_BY</CTableHeaderCell>\r\n       <CTableHeaderCell></CTableHeaderCell>\r\n       </CTableRow>\r\n       </CTableHead>\r\n       <CTableBody>\r\n       {\r\n        \r\n            (hmo.length ===0?'':hmo.map((item)=>(\r\n            <CTableRow key={item.id}>\r\n            <CTableDataCell>{item.code}</CTableDataCell>\r\n       <CTableDataCell>{item.name}</CTableDataCell>\r\n       <CTableDataCell>{item.address}</CTableDataCell>\r\n       <CTableDataCell>{item.email}</CTableDataCell>\r\n       <CTableDataCell>{item.phone}</CTableDataCell>\r\n       <CTableDataCell>{item.ward.name}</CTableDataCell>\r\n       <CTableDataCell>{item.lga.name}</CTableDataCell>\r\n       <CTableDataCell>{item.state.name}</CTableDataCell>\r\n       <CTableDataCell>{item.region.name}</CTableDataCell>\r\n       <CTableDataCell>{item.country.name}</CTableDataCell>\r\n        <CTableDataCell>{item.user.surname + ' ' + item.user.othername}</CTableDataCell>\r\n       <CTableDataCell>\r\n       <CButtonGroup>\r\n      {permissions.indexOf(\"EDIT_HMOS\") > -1?  <CButton color=\"secondary\" size=\"sm\" ><Link to={`/${0}/hmo/`}  state={item.id} className=\"edit\" style={{color:'white', textDecoration:'none'}}> Edit</Link></CButton> :''}\r\n        { permissions.indexOf(\"DELETE_HMOS\") > -1?  <CButton color=\"danger\" size=\"sm\" ><Link to={'/delete'}  state={item.id +'&/hmo&/hmo/'} className=\"delete\" style={{color:'white', textDecoration:'none'}}>Delete</Link></CButton>:''}\r\n        </CButtonGroup> </CTableDataCell>\r\n       </CTableRow>\r\n            ))\r\n            )\r\n        }\r\n\r\n      </CTableBody>\r\n       </CTable>\r\n       \r\n       <Stack spacing={2}>\r\n      <Pagination count={data.totalPages} page={page} onChange={handleChange} variant=\"outlined\" shape=\"rounded\"  color=\"secondary\" />\r\n    </Stack>\r\n  </DocsExample>\r\n  </CCardBody>\r\n  </CCard>\r\n  </CCol>\r\n  </CRow>\r\n    \r\n        \r\n        \r\n       \r\n       \r\n    )\r\n}\r\n\r\nexport default ListHmo"],"names":["startIndex","per_page","_useState","useState","_useState2","_slicedToArray","hmo","setHmo","_React$useState","React","_React$useState2","page","setPage","_useState3","_useState4","data","setData","_useContext","useContext","AuthContext","currentUser","permissions","navigate","useNavigate","useEffect","loadItem","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","app","get","concat","then","res","catch","err","showToastMessage","t0","stop","_x","apply","arguments","indexOf","handleChange","_ref2","_callee2","value","_context2","_x2","_x3","_jsx","CRow","children","CCol","xs","_jsxs","CCard","className","CCardHeader","style","backgroundColor","color","CCardBody","DocsExample","href","add","showAdd","CTable","striped","fontSize","align","responsive","CTableHead","CTableRow","CTableHeaderCell","CTableBody","length","map","item","CTableDataCell","code","name","address","email","phone","ward","lga","state","region","country","user","surname","othername","CButtonGroup","CButton","size","Link","to","id","textDecoration","Stack","spacing","Pagination","count","totalPages","onChange","variant","shape"],"sourceRoot":""}