{"version":3,"file":"static/js/7666.8c652a0c.chunk.js","mappings":"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","sources":["helpers/customAlphabet.js","helpers/paging_indexes.js","components/registrationdialog.jsx","pages/gforms/list.jsx"],"sourcesContent":["import { customAlphabet } from 'nanoid'\r\nexport const nanoid = customAlphabet('1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ0987654321', 10)","\r\nexport const startIndex = 1;\r\nexport const per_page = 30;\r\n//1692950350","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport showToastMessage from './toast';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport app from '../helpers/axiosConfig';\r\nimport moment from 'moment';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function FormDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const navigate = useNavigate()\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleSubmit = async e =>{\r\n    try{\r\n      const code = document.getElementById('code').value\r\n      if(code === '' || code === null){\r\n        showToastMessage('Please enter valid registration Code','error')\r\n      }\r\n      else{\r\n        trackPromise(\r\n          app.get(`/code/${code}/`,{})\r\n          .then(res =>{\r\n            const data = res.data\r\n            if(data === null){\r\n            showToastMessage('Invalid Regitration code found!', 'error')\r\n            }\r\n            else\r\n          {const diff = moment().subtract(Date(data.user_rrr.expired_date), 'years')\r\n          if(diff < 0) showToastMessage( 'Registration has expired','error')\r\n          else{\r\n            navigate('/form/register/add', {state:data.user_rrr})\r\n          }}\r\n          })\r\n          .catch(err=>{\r\n            showToastMessage(err, 'error')\r\n          })\r\n        )\r\n      }\r\n\r\n    }\r\n    catch(err){\r\n showToastMessage(err, 'error')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n        Registration\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>REGISTRATION CODE</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please enter the registration code sent to you to continue\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"code\"\r\n            label=\"Registration Code\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleSubmit}>Continue</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import app from '../../helpers/axiosConfig'\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport FormDialog from '../../components/registrationdialog';\r\nimport FormDialogCsv from '../../components/uploadcsv';\r\nimport { Pagination, Stack } from '@mui/material';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport { per_page, startIndex } from '../../helpers/paging_indexes';\r\nimport showToastMessage from '../../components/toast';\r\nimport moment from 'moment';\r\nimport {\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCardImage,\r\n  CCardText,\r\n  CCardTitle,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableCaption,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { DocsExample } from '../../components'\r\n\r\n\r\nconst ListRegister\r\n = () =>{\r\n       const [gforms, setGforms] = useState([]);\r\n       const [newreg, setnewreg] = useState(0);\r\n       const [page, setPage] = React.useState(1);\r\n        const [data, setData] = useState([]);\r\n        const [rrrId, setRrrId] = useState(0)\r\n        const [count, setCount] = useState(0)\r\n        const [showUpload, setShowUpload] = useState(false)\r\n   const {currentUser, permissions } = useContext(AuthContext);\r\n    const navigate = useNavigate()\r\n      const ids = currentUser?.id; \r\n\r\nuseEffect(()=>{\r\nconst loadItem = async e =>{\r\n try{\r\n      await app.get(`/forms/register/${startIndex}/${per_page}`)\r\n          .then(res=>{\r\n                setGforms(res?.data.res)\r\n                setData(res.data)\r\n          })\r\n          .catch(err=>{\r\n               showToastMessage('Error occured while trying loading data','error')\r\n          })\r\n          \r\n        }catch(err){\r\n          showToastMessage('Error occured while trying loading data. Reason:' +err,'error')\r\n        }}\r\n         loadItem() \r\n    const checkUserId = async e =>{\r\n      try{\r\n         const reg = await app.get(`/register/${ids}/userId`)\r\n         setnewreg(reg?.data.length)\r\n         }catch(err){\r\n         return(err.message)\r\n        }\r\n    }\r\n    const checkUser_rrr_code = async e =>{\r\n        await app.get(`/${currentUser.id}/user-rrr/getuserid/rrr/rrr/`)\r\n        .then(res=>{\r\n          const exp = moment(res.data.expired_date).format('YYYY MM')\r\n          const today = moment()\r\n          const diff = today.diff(exp, 'days')\r\n         if(diff < 0){\r\n          app.get(`/codes/${res.data.id}/code/rrr/`).then(res1=>{\r\n            setCount(res.data.maxNumber)\r\n           if(res1.data.count < res.data.maxNumber) setShowUpload(true)\r\n           setRrrId(res1.data.rows[0].user_rrrId)\r\n          }).catch(err=>{\r\n\r\n          })\r\n         }\r\n          \r\n        }).catch(err=>{\r\n        showToastMessage(err, 'error')\r\n        })\r\n    }\r\n     checkUserId()\r\n     checkUser_rrr_code()\r\n     \r\n\r\n  }, [ids, navigate])\r\n  const handleChange = async (e, value) => {\r\n    setPage(value);\r\n    try{\r\n      await app.get(`/forms/register/${page}/${per_page}`)\r\n          .then(res=>{\r\n                setGforms(res?.data.res)\r\n                setData(res.data)\r\n          })\r\n          .catch(err=>{\r\n               showToastMessage('Error occured while trying loading data','error')\r\n          })\r\n          }catch(err){\r\n          showToastMessage('Error occured while trying loading data. Reason:' +err,'error')\r\n        }\r\n\r\n  }\r\n  \r\n    return (\r\n       <CRow >\r\n      <CCol xs={12} >\r\n        <CCard className=\"mb-12\" >\r\n         <CCardHeader style={{backgroundColor:'skyblue'}}>\r\n            <strong style={{color:'white'}}>LIST OF ENROLEES</strong>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Using the Add New button to create new Enrolee.\r\n            </p>\r\n           \r\n            <DocsExample href=\"\" add=\"Enrolee List\"></DocsExample>\r\n            <span style={{width:'100%', display:'flex', flexDirection:'row', gap:'10px'}}>{ newreg >0 ?'':<FormDialog /> }   {/* showUpload && <FormDialogCsv user_rrrId={rrrId} count ={count}/> */} </span>\r\n    \r\n       <CTable striped style={{fontSize:'12px'}} align=\"middle\" responsive>\r\n       <CTableHead>\r\n       <CTableRow>\r\n       <CTableDataCell>ID No#</CTableDataCell>\r\n       <CTableDataCell>SURNAME</CTableDataCell>\r\n       <CTableDataCell>OTHERNAME</CTableDataCell>\r\n       <CTableDataCell>MIDDLE NAME</CTableDataCell>\r\n        <CTableDataCell>SEX</CTableDataCell>\r\n        <CTableDataCell>MOBILE</CTableDataCell>\r\n        <CTableDataCell>EMAIL</CTableDataCell>\r\n         <CTableDataCell>PRIMARY HEALTHCARE </CTableDataCell>\r\n       <CTableDataCell>EDITEDBY</CTableDataCell>\r\n       <CTableDataCell></CTableDataCell>\r\n       </CTableRow>\r\n       </CTableHead>\r\n       <CTableBody>\r\n       {\r\n        permissions?.indexOf('VIEW_ALL_MEMBERS') > -1?\r\n        gforms.length === 0? '': gforms.map((item)=>{\r\n       return  (         \r\n            <CTableRow key={item.id}>\r\n            <CTableDataCell>{item.idCode}</CTableDataCell>\r\n       <CTableDataCell>{item.surname}</CTableDataCell>\r\n       <CTableDataCell>{item.lastname}</CTableDataCell>\r\n       <CTableDataCell>{item.middlename}</CTableDataCell>\r\n        <CTableDataCell>{item.sex}</CTableDataCell>\r\n       <CTableDataCell>{item.phone}</CTableDataCell>\r\n       <CTableDataCell>{item.email}</CTableDataCell>\r\n       <CTableDataCell>{item.hospital.hospitalCode} - {item.hospital.name}</CTableDataCell>      \r\n        <CTableDataCell>{item.user.surname + ' ' + item.user.othername}</CTableDataCell>\r\n       <CTableDataCell></CTableDataCell>\r\n       <CTableDataCell>\r\n       <CButtonGroup>\r\n       { permissions?.indexOf(\"EDIT_MEMBERSHIP_FORM\") > -1? <CButton color=\"secondary\" size=\"sm\" > <Link to={`/${0}/register/`}  state={item.id} className=\"edit\"style={{color:'white', textDecoration:'none'}}> Edit</Link></CButton> :''}\r\n        { permissions?.indexOf(\"VIEW_MEMBERSHIP_FORM\") > -1? <CButton color=\"info\" size=\"sm\" > <Link to={`/${item.id}/register/3`}  state={item.id} className=\"view\" style={{color:'white', textDecoration:'none'}}>View</Link></CButton> :'' }\r\n        { permissions?.indexOf(\"DELETE_MEMBERSHIP_FORM\") > -1? <CButton color=\"danger\" size=\"sm\" ><Link to={'/delete'}  state={item.id +'&/form/register&/register/'} className=\"delete\" style={{color:'white', textDecoration:'none'}}>Delete</Link></CButton> :''}\r\n     </CButtonGroup>\r\n     </CTableDataCell>\r\n       </CTableRow>\r\n            )\r\n              })\r\n              :\r\n              gforms.length === 0? '': gforms.map((item)=>{\r\n                    if(currentUser?.id !== item.userId) return null\r\n               return(\r\n\r\n            <CTableRow key={item.id}>\r\n            <CTableDataCell>{item.idCode}</CTableDataCell>\r\n       <CTableDataCell>{item.surname}</CTableDataCell>\r\n       <CTableDataCell>{item.lastname}</CTableDataCell>\r\n       <CTableDataCell>{item.middlename}</CTableDataCell>\r\n        <CTableDataCell>{item.sex}</CTableDataCell>\r\n       <CTableDataCell>{item.phone}</CTableDataCell>\r\n       <CTableDataCell>{item.email}</CTableDataCell>\r\n       <CTableDataCell>{item.hospital.hospitalCode} - {item.hospital.name}</CTableDataCell>      \r\n        <CTableDataCell>{item.user.surname + ' ' + item.user.othername}</CTableDataCell>\r\n       <CTableDataCell></CTableDataCell>\r\n       <CTableDataCell>\r\n       <CButtonGroup>\r\n       { permissions?.indexOf(\"EDIT_MEMBERSHIP_FORM\") > -1? <CButton color=\"secondary\" size=\"sm\" ><Link to={`/${0}/register/`}  state={item.id} className=\"edit\"> Edit</Link></CButton> :''}\r\n        { permissions?.indexOf(\"VIEW_MEMBERSHIP_FORM\") > -1? <CButton color=\"info\" size=\"sm\" ><Link to={`/${item.id}/register/3`}  state={item.id} className=\"view\">View</Link></CButton> :'' }\r\n        { permissions?.indexOf(\"DELETE_MEMBERSHIP_FORM\") > -1? <CButton color=\"danger\" size=\"sm\" ><Link to={'/delete'}  state={item.id +'&/form/register&/register/'} className=\"delete\">Delete</Link></CButton> :''}\r\n        </CButtonGroup></CTableDataCell>\r\n       </CTableRow>\r\n            )\r\n            })\r\n           \r\n        }\r\n      </CTableBody>\r\n       </CTable>\r\n        \r\n       <Stack spacing={2}>\r\n      <Pagination count={data.totalPages} page={page} onChange={handleChange} variant=\"outlined\" shape=\"rounded\"  color=\"secondary\" />\r\n    </Stack>\r\n      \r\n       </CCardBody>\r\n       </CCard>\r\n       </CCol>\r\n       </CRow>\r\n         \r\n    )\r\n}\r\n\r\nexport default ListRegister\r\n"],"names":["nanoid","customAlphabet","startIndex","per_page","FormDialog","_React$useState","React","_React$useState2","_slicedToArray","open","setOpen","navigate","useNavigate","handleClose","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","code","wrap","_context","prev","next","document","getElementById","value","showToastMessage","trackPromise","app","get","concat","then","res","data","moment","subtract","Date","user_rrr","expired_date","state","catch","err","stop","_x","apply","arguments","_jsxs","children","_jsx","Button","variant","onClick","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","id","label","type","fullWidth","DialogActions","_useState","useState","_useState2","gforms","setGforms","_useState3","_useState4","newreg","setnewreg","page","setPage","_useState5","_useState6","setData","_useState7","_useState8","setRrrId","_useState9","_useState10","setCount","_useState11","_useState12","setShowUpload","_useContext","useContext","AuthContext","currentUser","permissions","ids","useEffect","loadItem","t0","checkUserId","_ref2","_callee2","reg","_context2","sent","length","abrupt","message","_x2","checkUser_rrr_code","_ref3","_callee3","_context3","exp","format","diff","res1","maxNumber","count","rows","user_rrrId","_x3","handleChange","_ref4","_callee4","_context4","_x4","_x5","CRow","CCol","xs","CCard","className","CCardHeader","style","backgroundColor","color","CCardBody","DocsExample","href","add","width","display","flexDirection","gap","CTable","striped","fontSize","align","responsive","CTableHead","CTableRow","CTableDataCell","CTableBody","indexOf","map","item","idCode","surname","lastname","middlename","sex","phone","email","hospital","hospitalCode","name","user","othername","CButtonGroup","CButton","size","Link","to","textDecoration","userId","Stack","spacing","Pagination","totalPages","onChange","shape"],"sourceRoot":""}