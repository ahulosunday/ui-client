{"version":3,"file":"static/js/9814.d249d699.chunk.js","mappings":"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","sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v1.js","views/pages/register/Register.js"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import React, {useContext, useState, useEffect} from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { v1 } from \"uuid\";\r\nimport app from '../../../helpers/axiosConfig'\r\nimport {AuthContext} from \"../../../context/authContext\";\r\n//import { trackPromise } from \"react-promise-tracker\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CFormInput,\r\n  CInputGroup,\r\n  CInputGroupText,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport { AiFillAccountBook, AiFillAlert, AiFillCompass, AiFillEye, AiFillFolderOpen, AiFillPhone, AiTwotonePicture } from \"react-icons/ai\";\r\nimport showToastMessage from \"../../../components/toast\";\r\nimport DefaultLogo from '../../../img/logo2.png'\r\nimport LoadingButton from \"@mui/lab/LoadingButton/LoadingButton\";\r\nimport { Stack } from \"@mui/material\";\r\nimport { DocsExample } from \"../../../components\";\r\n\r\n\r\nconst Register = () => {\r\n  \r\n    const {currentUser } = useContext(AuthContext);\r\n    const  navigate = useNavigate();\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (currentUser){\r\n            return navigate(\"/\");\r\n        }\r\n    },[currentUser]);\r\n      const [ err, setError ] = useState(null)\r\n     const [conpassword, setConpassword] = useState('')\r\n    const [file, setFile] = useState(null)\r\n     const [surname, setSurname] = useState('')\r\n      const [phone, setPhone] = useState('')\r\n       const [othername, setOthername] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [roleid, setRolid] = useState(2)\r\n    const [uiid, setUiid] = useState(v1())\r\n    const [ imgurl , setImgUrl] = useState(\"\")\r\n    \r\n   const handleSummit = async e =>{\r\n        e.preventDefault()\r\n        try{\r\n          setLoading(true)\r\n         if(conpassword !== password){\r\n          showToastMessage('Password mismatch found !', 'error')\r\n          setLoading(false)\r\n         }\r\n         else{\r\n        const formData = new FormData();\r\n        formData.append('file', file)\r\n        await app.post('/uploadfile', formData).then(async res =>{\r\n        await app.post(\"/users\", {username:username, password:password, email:email,uiid:uiid, roleid:roleid, imgurl:res.data.filename, surname: surname, othername: othername, phone: phone, isActive: 0})\r\n        .then(res =>{\r\n          setLoading(false)\r\n             navigate(\"/login\", {state:'Please wait for confirmation of your Payment.'});\r\n        })\r\n        .catch(errs=>{\r\n           setLoading(false)\r\n             setError(errs.message )\r\n        }) \r\n       }).catch(errs=>{\r\n         setLoading(false)\r\n        showToastMessage(\"No image found\", 'error')\r\n       })\r\n         }\r\n        }\r\n        catch(errs){\r\n            setError(\"Something went wrong. All fields are required. please check your entry and try again\" + errs) \r\n           \r\n        }\r\n        \r\n   }\r\n  return (\r\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md={9} lg={7} xl={6}>\r\n            <CCard className=\"mx-4\">\r\n              <CCardBody className=\"p-4\" style={{backgroundColor:'AppWorkspace', border: '2px solid darkgreen'}}>\r\n                <CForm>\r\n                \r\n                    <p className=\"text-medium-emphasis\" style={{textAlign:'center'}}>\r\n                     <img style={{marginTop:0, borderRadius:'30px'}} src={DefaultLogo} alt='' />\r\n                     <br />\r\n                    <span style={{color:'teal'}}> NHIA PORTAL</span> \r\n\r\n                    <br />\r\n                    \r\n                   \r\n                </p>\r\n<CRow>\r\n<CCol>\r\n   <CCard className=\"mb-12\" >\r\n         \r\n          <CCardBody>\r\n            <DocsExample add=\"PRE-REGISTRATION FORM\"> \r\n\r\n            \r\n                 \r\n                            <div style={{textAlign:'right'}} ><img className=\"uploadImg\" alt=\"\" src={imgurl} style={{height:'100px', width:'100px'}}  id=\"cxfileimg\" />\r\n           <br /> <span style={{color: 'red', fontSize: 9}}>Image size: 5kb, type: png, jpeg, jpg, gif</span>\r\n           </div>\r\n           \r\n                     <CInputGroup className=\"mb-4\">\r\n                    <CInputGroupText>\r\n                      <AiFillFolderOpen />\r\n                    </CInputGroupText>\r\n                    <CFormInput\r\n                      type=\"file\" name=\"file\" onChange={e =>{\r\n            setFile(e.target.files[0])\r\n            setImgUrl(URL.createObjectURL(e.target.files[0]));}}\r\n                    />\r\n                  </CInputGroup>\r\n                   <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupText>\r\n                      <AiTwotonePicture />\r\n                    </CInputGroupText>\r\n                    <CFormInput placeholder=\"Surname\" name=\"surname\" autoComplete=\"surname\" onChange={e =>setSurname(e.target.value)}  />\r\n  \r\n                    <CInputGroupText>\r\n                      <AiFillAlert />\r\n                    </CInputGroupText>\r\n                    <CFormInput placeholder=\"Othername\" name=\"othername\" autoComplete=\"othername\" onChange={e =>setOthername(e.target.value)}  />\r\n                  </CInputGroup>\r\n                  <CInputGroup className=\"mb-3\">\r\n                    \r\n                    <CInputGroupText>\r\n                      <AiFillPhone />\r\n                    </CInputGroupText>\r\n                    <CFormInput placeholder=\"Phone Number\" name=\"phone\" autoComplete=\"phone\" onChange={e =>setPhone(e.target.value)}  />\r\n                  \r\n                    <CInputGroupText>@</CInputGroupText>\r\n                    <CFormInput placeholder=\"Email\" name=\"email\" autoComplete=\"email\" onChange={e =>setEmail(e.target.value)}  />\r\n                  </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupText>\r\n                      <AiFillEye />\r\n                    </CInputGroupText>\r\n                    <CFormInput placeholder=\"Username\" name=\"username\" autoComplete=\"username\" onChange={e =>setUsername(e.target.value)}  />\r\n                  </CInputGroup>\r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupText>\r\n                      <AiFillCompass />\r\n                    </CInputGroupText>\r\n                    <CFormInput\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      name=\"password\"\r\n                      autoComplete=\"new-password\"\r\n                      onChange={e =>setPassword(e.target.value)} \r\n                    />\r\n              \r\n                    <CInputGroupText>\r\n                      <AiFillCompass />\r\n                    </CInputGroupText>\r\n                    <CFormInput\r\n                      type=\"password\"\r\n                      placeholder=\"Repeat password\"\r\n                      autoComplete=\"new-password\"\r\n                      onChange={e =>setConpassword(e.target.value)} \r\n                      name=\"conpassword\"\r\n                    />\r\n                  </CInputGroup>\r\n                 \r\n                  <div className=\"d-grid\">\r\n                   <Stack direction=\"row\" spacing={1} > <LoadingButton size=\"small\"\r\n          onClick={(e) => handleSummit(e)\r\n          }\r\n          endIcon={<SendIcon />}\r\n          loading={loading}\r\n          loadingPosition=\"end\"\r\n          variant=\"contained\"\r\n        >\r\n         Create Account\r\n        </LoadingButton> \r\n\r\n        <Link style={{textDecoration:'none', textAlign:'right'}} to=\"/login\">Already have account?</Link>\r\n        </Stack>\r\n            \r\n                  </div>\r\n                  </DocsExample>\r\n            </CCardBody>\r\n            </CCard>\r\n</CCol>\r\n</CRow>\r\n                </CForm>\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","REGEX","test","byteToHex","i","push","toString","substr","_nodeId","_clockseq","arr","offset","arguments","length","undefined","toLowerCase","validate","TypeError","_lastMSecs","_lastNSecs","options","buf","b","Array","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","n","stringify","currentUser","useContext","AuthContext","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","loading","setLoading","useEffect","_useState3","_useState4","setError","_useState5","_useState6","conpassword","setConpassword","_useState7","_useState8","file","setFile","_useState9","_useState10","surname","setSurname","_useState11","_useState12","phone","setPhone","_useState13","_useState14","othername","setOthername","_useState15","_useState16","username","setUsername","_useState17","_useState18","email","setEmail","_useState19","_useState20","password","setPassword","_useState21","_useState22","roleid","_useState23","v1","_useState24","uiid","_useState25","_useState26","imgurl","setImgUrl","handleSummit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","e","formData","wrap","_context2","prev","next","preventDefault","showToastMessage","FormData","append","app","post","then","_ref2","_callee","res","_context","data","filename","isActive","state","catch","errs","message","stop","_x2","apply","t0","_x","_jsx","className","children","CContainer","CRow","CCol","md","lg","xl","CCard","CCardBody","style","backgroundColor","border","_jsxs","CForm","textAlign","marginTop","borderRadius","src","DefaultLogo","alt","color","DocsExample","add","height","width","id","fontSize","CInputGroup","CInputGroupText","AiFillFolderOpen","CFormInput","type","name","onChange","target","files","URL","createObjectURL","AiTwotonePicture","placeholder","autoComplete","value","AiFillAlert","AiFillPhone","AiFillEye","AiFillCompass","Stack","direction","spacing","LoadingButton","size","onClick","endIcon","SendIcon","loadingPosition","variant","Link","textDecoration","to"],"sourceRoot":""}